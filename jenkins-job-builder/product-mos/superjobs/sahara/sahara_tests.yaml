- job:
    name: 9.0-sahara_tests
    wrappers:
      - build-name:
          name: ${BUILD_NUMBER}.${FILE,path="build-name-setter.info"}
    parameters:
      - string:
          name: ISO_DIR
          default: '/var/www/fuelweb-iso'
      - string:
          name: SNAPSHOT_NAME
      - string:
          name: REPORT_PREFIX
          default: '/srv/jenkins/sahara'
      - string:
          name: GLANCE_IMAGES
          default: '/home/jenkins/sahara-images'
    builders:
        - shell: |
            set +e
            ISO_NAME=`ls "$ISO_DIR"`
            ISO_ID=`echo "$ISO_NAME" | cut -f3 -d-`

            # Generate file for build-name plugin
            SNAPSHOT=`echo $SNAPSHOT_NAME | sed 's/ha_deploy_//'`
            echo "$ISO_ID"_"$SNAPSHOT" > build-name-setter.info

            ENV_NAME=MOS_CI_"$ISO_NAME"

            # Storing path for xml reports, that will be used in
            # report_to_testrail job
            REPORT_PATH="$REPORT_PREFIX"/"$ENV_NAME"_"$SNAPSHOT_NAME"
            echo "$REPORT_PATH" > ./param.pm
            echo "$BUILD_URL" > ./build_url

            sudo apt-get install sshpass git

            # git clone https://github.com/openstack/sahara-tests.git
            # cd sahara-tests
            # git fetch https://review.openstack.org/openstack/sahara-tests refs/changes/15/281315/6 && git checkout FETCH_HEAD

            sudo dos.py revert-resume "$ENV_NAME" "$SNAPSHOT_NAME"

            #for FILE in `ls -1 "$GLANCE_IMAGES"`
            #do
            #sshpass -p 'r00tme' scp -o "UserKnownHostsFile=/dev/null StrictHostKeyChecking no" "$GLANCE_IMAGES$FILE" root@10.109.2.2:/root
            #image_name=`echo "$FILE" | sed "s/.qcow2//g"`
            # glance image-create --name "$image_name" --file "$FILE" --disk-format qcow2 --container-format bare
            #echo 'glance image-create --name "$image_name" --file "$FILE" --disk-format qcow2 --container-format bare' | sshpass -p 'r00tme' ssh -T root@10.109.2.2
            #done

            # Temporary for test job
            sshpass -p 'r00tme' scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${GLANCE_IMAGES}/sahara-liberty-spark-1.6.0-ubuntu-14.04.qcow2 root@10.109.2.2:/root/

            echo 'sed -i "s|:5000/|:5000/v2.0|g" openrc' > controller_script.sh
            echo '. ./openrc' >> controller_script.sh
            echo 'glance image-create --name sahara-liberty-spark-1.6.0-ubuntu-14.04 --file sahara-liberty-spark-1.6.0-ubuntu-14.04.qcow2 --disk-format qcow2 --container-format bare    --property _sahara_tag_spark=True --property _sahara_tag_1.6.0=True --property _sahara_username=ubuntu' >> controller_script.sh
            sshpass -p 'r00tme' scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ./controller_script.sh root@10.109.2.2:/root/

            echo '#!/bin/bash' > remote_script.sh
            echo 'node_num=`fuel node | grep controller | awk '\''{print $1}'\'' | head -n 1`' >> remote_script.sh
            echo 'scp /root/sahara-liberty-spark-1.6.0-ubuntu-14.04.qcow2 node-"$node_num":/root/' >> remote_script.sh
            echo 'scp /root/controller_script.sh node-"$node_num":/root/' >> remote_script.sh
            echo ' echo chmod +x /root/controller_script.sh | ssh -T node-"$node_num" ' >> remote_script.sh
            echo ' echo /bin/bash -x /root/controller_script.sh | ssh -T node-"$node_num" ' >> remote_script.sh
            sshpass -p 'r00tme' scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ./remote_script.sh root@10.109.2.2:/root/

            echo 'chmod +x remote_script.sh' | sshpass -p 'r00tme' ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -T root@10.109.2.2
            echo '/bin/bash -x remote_script.sh' | sshpass -p 'r00tme' ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -T root@10.109.2.2

            # Generating file for configure

            echo '[DEFAULT]' > sahara-conf
            echo 'OS_USERNAME: admin' >> sahara-conf
            echo 'OS_PASSWORD: admin' >> sahara-conf
            echo 'OS_TENANT_NAME: admin' >> sahara-conf
            echo 'OS_AUTH_URL: http://10.109.4.3:5000/v2.0' >> sahara-conf
            echo 'network_type: neutron' >> sahara-conf
            echo 'network_private_name: admin_internal_net' >> sahara-conf
            echo 'network_public_name: admin_floating_net' >> sahara-conf
            echo 'vanilla_two_six_image: centos_sahara_vanilla_hadoop_2_6_latest' >> sahara-conf
            echo 'vanilla_two_seven_one_image: vanilla271' >> sahara-conf
            echo 'spark_1_6_image: sahara-liberty-spark-1.6.0-ubuntu-14.04' >> sahara-conf
            echo 'cdh_5_4_0_image: cdh540' >> sahara-conf
            echo 'cluster_name: cluster' >> sahara-conf
            echo 'ci_flavor_id: '\''2'\'' ' >> sahara-conf
            echo 'medium_flavor_id: '\''3'\'' ' >> sahara-conf
            echo 'large_flavor_id: '\''5'\'' ' >> sahara-conf

            tox -e venv -- sahara-scenario -p spark -v 1.6.0 -V ./sahara-conf --verbose --report

    scm:
        - sahara-tests-repository
    project-type: freestyle
    defaults: global
    #node: Slave-srv98
    node: Slave-srv150
    description: 'description'
    disabled: false
    display-name: '9.0_SAHARA_TESTS'
    concurrent: true
    browser: githubweb
    retry-count: 3
    logrotate:
      daysToKeep: 5
      numToKeep: 20
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
    publishers:
      - email:
          recipients: 'ogubanov@mirantis.com'

#      - postbuildscript:
#          script-only-if-succeeded: False
#          builders:
#            - shell: |
#                set -e
#                REPORT_PATH=`cat ./param.pm`
#                sudo mkdir -p "$REPORT_PATH"
#                sudo cp report.xml "$REPORT_PATH"
#                sudo cp build_url "$REPORT_PATH"
      - archive:
          artifacts: 'sahara-conf'
          allow-empty: 'true'
          fingerprint: true

      - archive:
          artifacts: 'spark*'
          allow-empty: 'true'
          fingerprint: true
#
#      - junit:
#          results: report.xml
#      - workspace-cleanup:
#          fail-build: false
